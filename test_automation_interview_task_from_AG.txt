public class main.java.agivdel.library.Book {
    int id;
    String title; 
}

/* Институтская библиотека */
public interface main.java.agivdel.library.Library {
    /* Регистрация новой книги */
    void addNewBook(main.java.agivdel.library.Book book);

	/* Студент берет книгу */
	void borrowBook(main.java.agivdel.library.Book book, String student);
	
	/* Студент возвращает книгу */
	void returnBook(main.java.agivdel.library.Book book, String student);
	
	/* Получить список свободных книг */    
	List<main.java.agivdel.library.Book> findAvailableBooks();
}


ВАРИАНТ №1
/**
 * Получился единственный абонемент библиотеки.
 * Книгу может возвращать только тот студент, кто ее брал.
 */
public class main.java.agivdel.library.SingleDeliveryDesk implements main.java.agivdel.library.Library{
    private static main.java.agivdel.library.SingleDeliveryDesk instance;
    private final Map<Integer, main.java.agivdel.library.Book> availableBooksMap;
    private final Map<Integer, String> borrowedBooksMap;

    private main.java.agivdel.library.SingleDeliveryDesk() {
        availableBooksMap = new HashMap<>();
        borrowedBooksMap = new HashMap<>();
    }

    public static main.java.agivdel.library.SingleDeliveryDesk getInstance() {
        if (instance == null) {
            instance = new main.java.agivdel.library.SingleDeliveryDesk();
        }
        return instance;
    }

    @Override
    public void addNewBook(main.java.agivdel.library.Book book) {
        availableBooksMap.put(book.id, book);
    }

    @Override
    public void borrowBook(main.java.agivdel.library.Book book, String student) {
        availableBooksMap.remove(book.id);
        borrowedBooksMap.put(book.id, student);
    }

    @Override
    public void returnBook(main.java.agivdel.library.Book book, String student) {
        if (borrowedBooksMap.entrySet().stream().anyMatch(entry -> entry.getKey() == book.id & entry.getValue().equals(student))) {
            borrowedBooksMap.remove(book.id);
            availableBooksMap.put(book.id, book);
        }
    }

    @Override
    public List<main.java.agivdel.library.Book> findAvailableBooks() {
        return new ArrayList<>(availableBooksMap.values());
    }
}



ВАРИАНТ #2
/**
 * Получилось несколько абонементов библиотеки, каждый со своим независимым списком книг.
 * Книгу может возвращать любой студент, а не только тот, кто ее брал.
 * Если избавиться от borrowedBooksMap, можно еще более упростить методы borrowBook() и returnBook().
 */
public class main.java.agivdel.library.MultiDeliveryDesk implements main.java.agivdel.library.Library {
    private final Map<Integer, main.java.agivdel.library.Book> availableBooksMap;
    final Map<Integer, String> borrowedBooksMap;//можно удалить

    public main.java.agivdel.library.MultiDeliveryDesk() {
        availableBooksMap = new HashMap<>();
        borrowedBooksMap = new HashMap<>();
    }

    @Override
    public void addNewBook(main.java.agivdel.library.Book book) {
        availableBooksMap.put(book.id, book);
    }

    @Override
    public void borrowBook(main.java.agivdel.library.Book book, String student) {
        availableBooksMap.remove(book.id);
        borrowedBooksMap.put(book.id, student);//можно удалить
    }

    @Override
    public void returnBook(main.java.agivdel.library.Book book, String student) {
        if (borrowedBooksMap.keySet().stream().anyMatch(k -> k == book.id)) {//можно удалить
            borrowedBooksMap.remove(book.id);//можно удалить
            availableBooksMap.put(book.id, book);
        }
    }

    @Override
    public List<main.java.agivdel.library.Book> findAvailableBooks() {
        return new ArrayList<>(availableBooksMap.values());
    }


    /**
     * применять вместо класса main.java.agivdel.library.Book
     */
    public static class MoreBetterBook extends main.java.agivdel.library.Book {
        private static int nextId;

        static {
            var generator = new Random();
            nextId = generator.nextInt(1000);
        }

        public MoreBetterBook() {
            super();
            this.id = nextId;
            nextId++;
            this.title = "the book " + this.id;
        }

        @Override
        public String toString() {
            return "{id=" + id +
                    ", title='" + title + '\'' +
                    "}";
        }
    }
}
